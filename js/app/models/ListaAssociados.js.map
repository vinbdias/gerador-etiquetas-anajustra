{"version":3,"sources":["../../app-es6/models/ListaAssociados.js"],"names":["ListaAssociados","_lista","associado","push","idsAssociados","forEach","id","lista","concat"],"mappings":";;;;;;AAAA;;;IAGMA,e;;AAEF;;;AAGA,+BAAc;AAAA;;AAEV;AACA,aAAKC,MAAL,GAAc,EAAd;AACH;;AAED;;;;;;;iCAGSC,S,EAAW;;AAEhB,iBAAKD,MAAL,CAAYE,IAAZ,CAAiBD,SAAjB;AACH;;AAED;;;;;;;;AAgBA;;;kDAG0B;;AAEtB,gBAAIE,gBAAgB,EAApB;;AAEA,iBAAKH,MAAL,CAAYI,OAAZ,CAAoB,UAASH,SAAT,EAAoB;AACpCE,8BAAcD,IAAd,CAAmBD,UAAUI,EAA7B;AACH,aAFD;;AAIA,mBAAOF,aAAP;AACH;;;4BAzBW;;AAER,mBAAO,KAAKH,MAAZ;AACH;;AAED;;;;0BAGUM,K,EAAO;;AAEb,iBAAKN,MAAL,GAAc,GAAGO,MAAH,CAAUD,KAAV,CAAd;AACH","file":"ListaAssociados.js","sourcesContent":["/**\r\n * Classe modelo responsável por gerenciar comportamentos referentes ao armazenamento da lista de associados para quem se gerará etiquetas\r\n */\r\nclass ListaAssociados {\r\n\r\n    /**\r\n     * Método construtor\r\n     */\r\n    constructor() {\r\n\r\n        //Inicializa o atributo privado lista\r\n        this._lista = [];\r\n    }\r\n\r\n    /**\r\n     * Método responsável por adicionar um associado à lista\r\n     */ \r\n    adiciona(associado) {\r\n\r\n        this._lista.push(associado);\r\n    }\r\n\r\n    /**\r\n     * Getter do atributo privado lista\r\n     */\r\n    get lista() {\r\n\r\n        return this._lista;\r\n    }\r\n\r\n    /**\r\n     * Setter do atributo privado lista\r\n     */ \r\n    set lista(lista) {\r\n\r\n        this._lista = [].concat(lista);\r\n    }\r\n\r\n    /**\r\n     * Método responsável por retornar uma lista contendo apenas os \"id's\" dos associados armazenados no atributo privado lista\r\n     */\r\n    obterListaIdsAssociados() {\r\n\r\n        let idsAssociados = [];\r\n\r\n        this._lista.forEach(function(associado) {\r\n            idsAssociados.push(associado.id);\r\n        });\r\n\r\n        return idsAssociados;\r\n    }\r\n}"]}