{"version":3,"sources":["../../app-es6/controllers/GeradorEtiquetasController.js"],"names":["GeradorEtiquetasController","_inputNome","$","_inputCpf","_iniciar_jQueryTagsManagerPlugin","_iniciar_jQueryTypeAheadPlugin","_iniciar_jQueryMaskPlugin","_listaAssociados","ListaAssociados","_nomeApi","tagsManager","_cpfApi","_pesquisaAssociados","BloodhoundFactory","getBloodhound","initialize","_instanciarTypeAheadNome","_instanciarTypeAheadCpf","mask","evento","inArray","keyCode","event","preventDefault","ctrlKey","metaKey","shiftKey","typeahead","displayKey","source","ttAdapter","on","object","associado","nome","adiciona","val","bind","cpf","window","open","obterListaIdsAssociados","join"],"mappings":";;;;;;AAAA;;;IAGMA,0B;;AAEF;;;AAGH,0CAAc;AAAA;;AAEP;AACN,aAAKC,UAAL,GAAkBC,EAAE,aAAF,CAAlB;AACA,aAAKC,SAAL,GAAiBD,EAAE,YAAF,CAAjB;;AAEM;AACA,aAAKE,gCAAL;;AAEA;AACA,aAAKC,8BAAL;;AAEA;AACA,aAAKC,yBAAL;;AAEA;AACN,aAAKC,gBAAL,GAAwB,IAAIC,eAAJ,EAAxB;AACA;;AAEE;;;;;;;2DAGmC;;AAE/B,iBAAKC,QAAL,GAAgB,KAAKR,UAAL,CAAgBS,WAAhB,EAAhB;AACA,iBAAKC,OAAL,GAAgB,KAAKR,SAAL,CAAeO,WAAf,EAAhB;AACH;;AAED;;;;;;yDAGiC;;AAE7B;AACA,iBAAKE,mBAAL,GAA2BC,kBAAkBC,aAAlB,EAA3B;;AAEA;AACA,iBAAKF,mBAAL,CAAyBG,UAAzB;;AAEA;AACA,iBAAKC,wBAAL;AACA,iBAAKC,uBAAL;AACH;;AAED;;;;;;oDAG4B;;AAExB,iBAAKd,SAAL,CAAee,IAAf,CAAoB,gBAApB;AACH;;AAED;;;;;;;qCAIaC,M,EAAQ;AACjB;AACA,gBAAGjB,EAAEkB,OAAF,CAAUD,OAAOE,OAAjB,EAA0B,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,EAAuB,GAAvB,EAA4B,GAA5B,CAA1B,MAAgE,CAAC,CAAjE;AACC;AACCF,mBAAOE,OAAP,GAAiB,EAAjB,IAAuBC,MAAMD,OAAN,GAAgB,EAFzC,IAGEF,OAAOE,OAAP,GAAiB,GAAjB,IAAwBC,MAAMD,OAAN,GAAgB,GAH7C,EAGmD;AAC/C;AACA;AACH;AACD;AACAC,kBAAMC,cAAN;AACH;;AAED;;;;;;;sCAIWJ,M,EAAQ;;AAEf;AACA,gBAAGjB,EAAEkB,OAAF,CAAUD,OAAOE,OAAjB,EAA0B,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAW,EAAX,EAAe,EAAf,EAAmB,GAAnB,EAAwB,GAAxB,CAA1B,MAA4D,CAAC,CAA7D;AACE;AACAF,mBAAOE,OAAP,IAAkB,EAAlB,KAAyBF,OAAOK,OAAP,KAAmB,IAAnB,IAA2BL,OAAOM,OAAP,KAAmB,IAAvE,CAFF;AAGE;AACAN,mBAAOE,OAAP,IAAkB,EAAlB,KAAyBF,OAAOK,OAAP,KAAmB,IAAnB,IAA2BL,OAAOM,OAAP,KAAmB,IAAvE,CAJF;AAKE;AACAN,mBAAOE,OAAP,IAAkB,EAAlB,KAAyBF,OAAOK,OAAP,KAAmB,IAAnB,IAA2BL,OAAOM,OAAP,KAAmB,IAAvE,CANF;AAOE;AACAN,mBAAOE,OAAP,IAAkB,EAAlB,IAAwBF,OAAOE,OAAP,IAAkB,EAR/C,EAQoD;AAC3C;AACA;AACR;;AAED;AACA,gBAAG,CAACC,MAAMI,QAAN,IAAmBJ,MAAMD,OAAN,GAAgB,EAAhB,IAAsBC,MAAMD,OAAN,GAAgB,EAA1D,MAAmEC,MAAMD,OAAN,GAAgB,EAAhB,IAAsBC,MAAMD,OAAN,GAAgB,GAAzG,CAAH,EAAkH;;AAE9GC,sBAAMC,cAAN;AACH;AACP;;AAEE;;;;;;mDAGwB;;AAEpB,iBAAKtB,UAAL,CAAgB0B,SAAhB,CAA0B,IAA1B,EAAgC;AAC5BC,4BAAY,MADgB;AAE5BC,wBAAQ,KAAKjB,mBAAL,CAAyBkB,SAAzB;AAFoB,aAAhC,EAGGC,EAHH,CAGM,oBAHN,EAG4B,UAAUC,MAAV,EAAkBC,SAAlB,EAA6B;;AAErD,qBAAKxB,QAAL,CAAcC,WAAd,CAA0B,SAA1B,EAAqCuB,UAAUC,IAA/C;AACA,qBAAK3B,gBAAL,CAAsB4B,QAAtB,CAA+BF,SAA/B;;AAEA,qBAAKhC,UAAL,CAAgBmC,GAAhB,CAAoB,EAApB;AACH,aAN2B,CAM1BC,IAN0B,CAMrB,IANqB,CAH5B;AAUN;;AAEE;;;;;;kDAGuB;;AAEnB,iBAAKlC,SAAL,CACCwB,SADD,CACW,IADX,EACiB;AACbC,4BAAY,KADC;AAEbC,wBAAQ,KAAKjB,mBAAL,CAAyBkB,SAAzB;AAFK,aADjB,EAKCC,EALD,CAKI,oBALJ,EAK0B,UAAUC,MAAV,EAAkBC,SAAlB,EAA6B;;AAEnD,qBAAKtB,OAAL,CAAaD,WAAb,CAAyB,SAAzB,EAAoCuB,UAAUK,GAA9C;AACA,qBAAK/B,gBAAL,CAAsB4B,QAAtB,CAA+BF,SAA/B;;AAEA,qBAAK9B,SAAL,CAAeiC,GAAf,CAAmB,EAAnB;AACH,aANyB,CAMxBC,IANwB,CAMnB,IANmB,CAL1B;AAYN;;AAEE;;;;;;;;uCAKYlB,M,EAAQ;;AAEtBA,mBAAOI,cAAP;AACMgB,mBAAOC,IAAP,CAAY,gDAAgD,KAAKjC,gBAAL,CAAsBkC,uBAAtB,GAAgDC,IAAhD,CAAqD,GAArD,CAA5D;AACN","file":"GeradorEtiquetasController.js","sourcesContent":["/**\r\n * Classe que controla os eventos da tela da página de pesquisa de por nome e CPF de associados para geração de etiquetas em pdf\r\n */\r\nclass GeradorEtiquetasController {\r\n\r\n    /**\r\n     * Método construtor\r\n     */\r\n\tconstructor() {\r\n\r\n        //Obtém e guarda os inputs de nome e cpf em atributos da classe para referência e uso futuros\r\n\t\tthis._inputNome = $('#busca-nome');\r\n\t\tthis._inputCpf = $('#busca-cpf');\r\n\r\n        //Inicializa plugin jQuery TagsManager (nuvem de tags)\r\n        this._iniciar_jQueryTagsManagerPlugin();\r\n\r\n        //Inicializa plugin jQuery TypeAhead\r\n        this._iniciar_jQueryTypeAheadPlugin();\r\n\r\n        //Inicializa plugin jQuery Mask\r\n        this._iniciar_jQueryMaskPlugin();\r\n\r\n        //Obtém instância do modelo ListaAssociados e guarda em atributo para uso futuro\r\n\t\tthis._listaAssociados = new ListaAssociados();\r\n\t}\r\n\r\n    /**\r\n     * Método responsável por incializar e amarrar o plugin TagsManager, do jQuery, aos inputs de nome e cpf. (Nuvem de tags)\r\n     */\r\n    _iniciar_jQueryTagsManagerPlugin() {\r\n\r\n        this._nomeApi = this._inputNome.tagsManager();\r\n        this._cpfApi =  this._inputCpf.tagsManager();        \r\n    }\r\n\r\n    /**\r\n     * Método responsável por incializar e amarrar o plugin TypeAhead, do jQuery, aos inputs de nome e cpf. (Autocompletar)\r\n     */\r\n    _iniciar_jQueryTypeAheadPlugin() {\r\n\r\n        //Obtém instância do motor Bloodhound, utilizado pelo TypeAhead para pesquisa, a partir da classe BloodhoundFactory\r\n        this._pesquisaAssociados = BloodhoundFactory.getBloodhound();\r\n\r\n        //Inicializa o Bloodhound\r\n        this._pesquisaAssociados.initialize();        \r\n\r\n        //Instancia de fato o TypeAhead para os inputs de nome e cpf.\r\n        this._instanciarTypeAheadNome();\r\n        this._instanciarTypeAheadCpf();         \r\n    }\r\n\r\n    /**\r\n     * Método responsável por inicializar o plugin Mask, do jQuery\r\n     */\r\n    _iniciar_jQueryMaskPlugin() {\r\n\r\n        this._inputCpf.mask('999.999.999-99');\r\n    }\r\n\r\n    /**\r\n     * Método que garante a entrada de apenas letras a partir do evento \"onkeydown\" em um input da tela\r\n     * @param Event event: evento que disparou a execução da função. Deve ser de um dos tipos: \"onkeyup\", \"onkeypress\", \"onkeydown\"\r\n     */\r\n    apenasLetras(evento) {\r\n        //Permitir: spacebar, backspace, delete, tab, escape, enter and .\r\n        if($.inArray(evento.keyCode, [32, 46, 8, 9, 27, 13, 110, 190]) !== -1 ||\r\n            //Checar se o keycode da tecla pressionada está dentro dos intervalos de caracteres alfabéticos\r\n            (evento.keyCode > 64 && event.keyCode < 91) ||\r\n            (evento.keyCode > 105 && event.keyCode < 123)) {\r\n            //Não faz nada\r\n            return;\r\n        }\r\n        //Interrompe a entrada do valor da tecla\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Método que garante a entrada de apenas números a partir do evento \"onkeydown\" em um input da tela\r\n     * @param Event event: evento que disparou a execução deste método. Deve ser de um dos tipos: \"onkeyup\", \"onkeypress\", \"onkeydown\"\r\n     */\r\n\tapenasNumeros(evento) {\r\n\r\n        //Permitir: backspace, delete, tab, escape, enter and .\r\n        if($.inArray(evento.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||\r\n             //Permitir: Ctrl/cmd+A\r\n            (evento.keyCode == 65 && (evento.ctrlKey === true || evento.metaKey === true)) ||\r\n             //Permitir: Ctrl/cmd+C\r\n            (evento.keyCode == 67 && (evento.ctrlKey === true || evento.metaKey === true)) ||\r\n             //Permitir: Ctrl/cmd+X\r\n            (evento.keyCode == 88 && (evento.ctrlKey === true || evento.metaKey === true)) ||\r\n             //Permitir: home, end, left, right\r\n            (evento.keyCode >= 35 && evento.keyCode <= 39)) {\r\n                 //Não faz nada. Permite a entrada do valor da tecla\r\n                 return;\r\n        }\r\n\r\n        //Garantir que é um número. Caso contrário, interromper a entrada do valor da tecla\r\n        if((event.shiftKey || (event.keyCode < 48 || event.keyCode > 57)) && (event.keyCode < 96 || event.keyCode > 105)) {\r\n\r\n            event.preventDefault();\r\n        }\t\t\r\n\t}\r\n\r\n    /**\r\n     * Método responsável por instanciar e controlar o comportamento do plugin TypeAhead, do jQuery, para o input de nome\r\n     */\r\n\t_instanciarTypeAheadNome() {\r\n\r\n        this._inputNome.typeahead(null, {\r\n            displayKey: 'nome',\r\n            source: this._pesquisaAssociados.ttAdapter()\r\n        }).on('typeahead:selected', function (object, associado) {\r\n            \r\n            this._nomeApi.tagsManager('pushTag', associado.nome);  \r\n            this._listaAssociados.adiciona(associado);\r\n\r\n            this._inputNome.val('');            \r\n        }.bind(this));\t\t\t\r\n\t}\r\n\r\n    /**\r\n     * Método responsável por instanciar e controlar o comportamento do plugin TypeAhead, do jQuery, para o input de cpf\r\n     */\r\n\t_instanciarTypeAheadCpf() {\r\n\r\n        this._inputCpf\r\n        .typeahead(null, {\r\n            displayKey: 'cpf',\r\n            source: this._pesquisaAssociados.ttAdapter()\r\n        })\r\n        .on('typeahead:selected', function (object, associado) {\r\n            \r\n            this._cpfApi.tagsManager('pushTag', associado.cpf);  \r\n            this._listaAssociados.adiciona(associado);  \r\n\r\n            this._inputCpf.val('');                     \r\n        }.bind(this)); \t\t\r\n\t}\r\n\r\n    /**\r\n     * Método responsável por gerenciar o comportamento de \"submit\" da página. \r\n     * Redireciona para a página responsável por gerar o .pdf das etiquetas.\r\n     * @param Event event: evento responsável por acionar a execução deste método\r\n     */\r\n\tgerarEtiquetas(evento) {\r\n\r\n\t\tevento.preventDefault();\r\n        window.open('gera-etiquetas-nome-cpf.php?ids_associados=' + this._listaAssociados.obterListaIdsAssociados().join(',')); \t\t\r\n\t}\r\n}"]}