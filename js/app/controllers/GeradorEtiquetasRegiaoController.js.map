{"version":3,"sources":["../../app-es6/controllers/GeradorEtiquetasRegiaoController.js"],"names":["GeradorEtiquetasRegiaoController","_inputSubmitButton","$","_inputSubmitRecarregaPagina","_inputTiposSaidaGroup","_tiposSaida","_inputValidaViaCEP","_divMensagemErro","_elementoListaRegioes","_containerDeMensagemDeErro","hide","_regiaoService","RegiaoService","_geradorEtiquetasService","GeradorEtiquetasService","_regioes","_buscaRegioes","obterRegioes","then","html","regioes","forEach","push","regiao","append","id","lotacao","prop","catch","console","log","erro","tiposSaida","elemento","attr","valor","evento","preventDefault","_preparaSubmissao","_validaSubmissao","show","_postaSubmissao","_obtemValoresTiposSaidaCheckboxGroup","validaViaCEP","dadosSubmissao","htmlAnterior","htmlAConcatenar","gerarEtiquetasRegiao","_trataResposta","resposta","regiaoId","excecoes","length","_imprimeExcecoes","_imprimeResposta","replace","excecao","mensagem","nomeXlsx","nomeXlsxOk","nomeXlsxNaoOk","retorno","tipoSaida"],"mappings":"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","file":"GeradorEtiquetasRegiaoController.js","sourcesContent":["/**\r\n * Classe que controla os eventos da tela da página de geração de análises de cadastro de endereço de associados e geração de arquivos para etiqueta\r\n */\r\nclass GeradorEtiquetasRegiaoController {\r\n\r\n    /**\r\n     * Método construtor\r\n     */\r\n    constructor() {\r\n\r\n        this._inputSubmitButton = $('#gerar-etiquetas');\r\n\r\n        this._inputSubmitRecarregaPagina = $('#recarrega-pagina');\r\n\r\n        this._inputTiposSaidaGroup = [$('#xlsx'), $('#xlsxOks'), $('#xlsxNaoOks')];\r\n        this._tiposSaida = [];\r\n\r\n        this._inputValidaViaCEP = $('#validacao-viacep');\r\n\r\n        this._divMensagemErro = $('#mensagem-erro');\r\n\r\n        this._elementoListaRegioes = $('#lista-regioes');        \r\n\r\n        this._containerDeMensagemDeErro = $('#container-mensagem-erro');\r\n        this._containerDeMensagemDeErro.hide();\r\n        \r\n        this._regiaoService = new RegiaoService();\r\n        this._geradorEtiquetasService = new GeradorEtiquetasService();\r\n\r\n        this._regioes = [];\r\n\r\n        this._buscaRegioes();\r\n    }\r\n\r\n    /**\r\n     * Método que busca e armazena JSON contendo as regiões\r\n     */\r\n    _buscaRegioes() {\r\n\r\n        this._regiaoService\r\n            .obterRegioes()\r\n            .then(regioes => {\r\n\r\n                this._elementoListaRegioes.html('');\r\n                regioes.forEach(regiao => {\r\n\r\n                    this._regioes.push(regiao);\r\n                    this._elementoListaRegioes.append('<li id=\"regiao-' + regiao.id + '\">' + regiao.lotacao + '</li>');\r\n                });    \r\n\r\n                this._inputSubmitButton.prop('disabled', false);\r\n            })        \r\n            .catch(erro => console.log(erro));\r\n    }\r\n\r\n    _obtemValoresTiposSaidaCheckboxGroup() {\r\n        \r\n        let tiposSaida = [];\r\n\r\n        this._inputTiposSaidaGroup.forEach(elemento => {\r\n            \r\n            this._tiposSaida.push({\r\n                id: elemento.attr('id'),\r\n                valor: (elemento.prop('checked') ? 1 : 0)\r\n            });\r\n        });    \r\n    }\r\n\r\n\r\n    /**\r\n     * Método responsável por gerenciar a submissão da página\r\n     * @param Event evento: evento responsável por acionar a execução deste método\r\n     */\r\n    submeteFormulario(evento) {\r\n\r\n        evento.preventDefault();        \r\n\r\n        this._preparaSubmissao();  \r\n\r\n        if(!this._validaSubmissao()) {\r\n\r\n            this._divMensagemErro.html('Favor informar um tipo de saída em arquivo');\r\n            this._divMensagemErro.show();            \r\n\r\n            return false;\r\n        }    \r\n        \r\n        this._divMensagemErro.html('');\r\n        this._divMensagemErro.hide();\r\n        \r\n        this._postaSubmissao();  \r\n     \r\n    }\r\n\r\n    /**\r\n     * Método que prepara os dados para submissao\r\n     * @param JSON regiao\r\n     * @return JSON\r\n     */\r\n    _preparaSubmissao(regiao) {    \r\n\r\n        this._obtemValoresTiposSaidaCheckboxGroup();\r\n\r\n        return {\r\n                regiao: regiao,\r\n                tiposSaida: this._tiposSaida,\r\n                validaViaCEP: (this._inputValidaViaCEP.prop('checked') ? 1 : 0)\r\n            };\r\n    }\r\n\r\n    /**\r\n     * Método que posta as submissões de cada região\r\n     */\r\n    _postaSubmissao() {\r\n\r\n        this._inputSubmitButton.prop('disabled', true);\r\n        this._inputSubmitButton.hide();\r\n\r\n        let dadosSubmissao = this._preparaSubmissao();\r\n\r\n        this._regioes.forEach(regiao => {\r\n\r\n            let htmlAnterior = $('#regiao-' + regiao.id).html();\r\n            let htmlAConcatenar = '';\r\n            $('#regiao-' + regiao.id).html(htmlAnterior + ' processando...');\r\n\r\n            this._geradorEtiquetasService\r\n                .gerarEtiquetasRegiao(this._preparaSubmissao(regiao))\r\n                .then(resposta => {\r\n                    \r\n                    this._trataResposta(regiao.id, resposta);                  \r\n                })\r\n                .catch(erro => {\r\n                    \r\n                    htmlAConcatenar = '<span style=\"color: red;\"> erro ao gerar etiquetas!</span>';\r\n\r\n                    $('#regiao-' + regiao.id).html('');\r\n                    $('#regiao-' + regiao.id).html(htmlAnterior + htmlAConcatenar);\r\n                    console.log(erro);\r\n                });            \r\n        });         \r\n    }\r\n\r\n    /**\r\n     * Método que trata a resposta\r\n     * @param int regiaoId\r\n     * @param JSON resposta\r\n     */\r\n    _trataResposta(regiaoId, resposta) {\r\n        \r\n        if(resposta.excecoes.length) {\r\n\r\n            this._imprimeExcecoes(regiaoId, resposta.excecoes);\r\n\r\n            return false;\r\n        }\r\n        \r\n        this._imprimeResposta(regiaoId, resposta);         \r\n    }\r\n\r\n    /**\r\n     * Método que imprime as exceções\r\n     * @param int regiaoId\r\n     * @param JSON resposta\r\n     */\r\n    _imprimeExcecoes(regiaoId, excecoes) {\r\n\r\n        let htmlAnterior = $('#regiao-' + regiaoId).html();\r\n        htmlAnterior = htmlAnterior.replace('processando...', '<span style=\"color: orange;\">completo.</span> ');\r\n        let htmlAConcatenar = '';\r\n\r\n        excecoes.forEach(excecao => {\r\n\r\n            htmlAConcatenar += ' <span style=\"color: orange;\"><strong>' + excecao + '</strong></span>';\r\n        });\r\n\r\n        $('#regiao-' + regiaoId).html(htmlAnterior + htmlAConcatenar); \r\n    }\r\n\r\n    /**\r\n     * Método que imprime a resposta\r\n     * @param int regiaoId\r\n     * @param JSON resposta\r\n     */\r\n    _imprimeResposta(regiaoId, resposta) {\r\n\r\n        let htmlAnterior = $('#regiao-' + regiaoId).html();\r\n        htmlAnterior = htmlAnterior.replace('processando...', '<span style=\"color: green;\"><strong>completo!</strong></span> ');\r\n\r\n        let htmlAConcatenar = '';        \r\n\r\n        htmlAConcatenar = '<span style=\"color: green;\">' + resposta.mensagem + ' ' + \r\n               (resposta.nomeXlsx != '' ? '<a href=\"' + resposta.nomeXlsx + '\" style=\"color: blue; text-decoration: underline;\">Excel PIMACO</a> ' : '') +\r\n               (resposta.nomeXlsxOk != '' ? '<a href=\"' + resposta.nomeXlsxOk + '\" style=\"color: green; text-decoration: underline;\">Excel OKs</a> ' : '') +\r\n               (resposta.nomeXlsxNaoOk != '' ? '<a href=\"' + resposta.nomeXlsxNaoOk + '\" style=\"color: orange; text-decoration: underline;\">Excel não OKs</a>'  : '') +\r\n              '</span> ';\r\n        \r\n        $('#regiao-' + regiaoId).html(htmlAnterior + htmlAConcatenar);         \r\n    }\r\n\r\n    /**\r\n     * Método que valida a submissao\r\n     * @return boolean\r\n     */\r\n    _validaSubmissao() {\r\n\r\n        let retorno = false;\r\n\r\n        this._tiposSaida.forEach(tipoSaida => {\r\n\r\n            if(tipoSaida.valor > 0)\r\n                retorno = true;\r\n                \r\n        });\r\n\r\n        return retorno;\r\n    }\r\n}"]}