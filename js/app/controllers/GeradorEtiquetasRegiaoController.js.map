{"version":3,"sources":["../../app-es6/controllers/GeradorEtiquetasRegiaoController.js"],"names":["GeradorEtiquetasRegiaoController","_inputSubmitButton","$","_inputSubmitRecarregaPagina","_inputTiposSaidaGroup","_tiposSaida","_divMensagemErro","_elementoListaRegioes","_containerDeMensagemDeErro","hide","_regiaoService","RegiaoService","_geradorEtiquetasService","GeradorEtiquetasService","_regioes","_buscaRegioes","obterRegioes","then","html","regioes","forEach","push","regiao","append","id","lotacao","prop","catch","console","log","erro","tiposSaida","elemento","attr","valor","evento","preventDefault","_obtemValoresTiposSaidaCheckboxGroup","_validaSubmissao","show","_postaSubmissao","htmlAnterior","htmlAConcatenar","gerarEtiquetasRegiao","_trataResposta","resposta","regiaoId","excecoes","length","_imprimeExcecoes","_imprimeResposta","excecao","mensagem","nomeXlsx","nomeXlsxOk","nomeXlsxNaoOk","retorno","tipoSaida"],"mappings":"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","file":"GeradorEtiquetasRegiaoController.js","sourcesContent":["/**\r\n * Classe que controla os eventos da tela da página de geração de análises de cadastro de endereço de associados e geração de arquivos para etiqueta\r\n */\r\nclass GeradorEtiquetasRegiaoController {\r\n\r\n    /**\r\n     * Método construtor\r\n     */\r\n    constructor() {\r\n\r\n        this._inputSubmitButton = $('#gerar-etiquetas');\r\n\r\n        this._inputSubmitRecarregaPagina = $('#recarrega-pagina');\r\n\r\n        this._inputTiposSaidaGroup = [$('#xlsx'), $('#xlsxOks'), $('#xlsxNaoOks')];\r\n        this._tiposSaida = [];\r\n\r\n        this._divMensagemErro = $('#mensagem-erro');\r\n\r\n        this._elementoListaRegioes = $('#lista-regioes');        \r\n\r\n        this._containerDeMensagemDeErro = $('#container-mensagem-erro');\r\n        this._containerDeMensagemDeErro.hide();\r\n        \r\n        this._regiaoService = new RegiaoService();\r\n        this._geradorEtiquetasService = new GeradorEtiquetasService();\r\n\r\n        this._regioes = [];\r\n\r\n        this._buscaRegioes();\r\n    }\r\n\r\n    /**\r\n     * Método que busca e armazena JSON contendo as regiões\r\n     */\r\n    _buscaRegioes() {\r\n\r\n        this._regiaoService\r\n            .obterRegioes()\r\n            .then(regioes => {\r\n\r\n                this._elementoListaRegioes.html('');\r\n                regioes.forEach(regiao => {\r\n\r\n                    this._regioes.push(regiao);\r\n                    this._elementoListaRegioes.append('<li id=\"regiao-' + regiao.id + '\">' + regiao.lotacao + '</li>');\r\n                });    \r\n\r\n                this._inputSubmitButton.prop('disabled', false);\r\n            })        \r\n            .catch(erro => console.log(erro));\r\n    }\r\n\r\n    _obtemValoresTiposSaidaCheckboxGroup() {\r\n        \r\n        let tiposSaida = [];\r\n\r\n        this._inputTiposSaidaGroup.forEach(elemento => {\r\n            \r\n            this._tiposSaida.push({\r\n                id: elemento.attr('id'),\r\n                valor: (elemento.prop('checked') ? 1 : 0)\r\n            });\r\n        });    \r\n    }\r\n\r\n\r\n    /**\r\n     * Método responsável por gerenciar a submissão da página\r\n     * @param Event evento: evento responsável por acionar a execução deste método\r\n     */\r\n    submeteFormulario(evento) {\r\n\r\n        evento.preventDefault();        \r\n\r\n        this._obtemValoresTiposSaidaCheckboxGroup();  \r\n\r\n        if(!this._validaSubmissao()) {\r\n\r\n            this._divMensagemErro.html('Favor informar um tipo de saída em arquivo');\r\n            this._divMensagemErro.show();            \r\n\r\n            return false;\r\n        }    \r\n        \r\n        this._divMensagemErro.html('');\r\n        this._divMensagemErro.hide();\r\n        \r\n        this._postaSubmissao();  \r\n     \r\n    }\r\n\r\n    /**\r\n     * Método que posta as submissões de cada região\r\n     */\r\n    _postaSubmissao() {\r\n\r\n        this._inputSubmitButton.prop('disabled', true);\r\n        this._inputSubmitButton.hide();\r\n\r\n        this._regioes.forEach(regiao => {\r\n\r\n            let htmlAnterior = $('#regiao-' + regiao.id).html();\r\n            let htmlAConcatenar = '';\r\n            $('#regiao-' + regiao.id).html(htmlAnterior + ' processando...');\r\n\r\n            this._geradorEtiquetasService\r\n                .gerarEtiquetasRegiao({\r\n                    regiao: regiao,\r\n                    tiposSaida: this._tiposSaida\r\n                })\r\n                .then(resposta => {\r\n                    \r\n                    this._trataResposta(regiao.id, resposta);                  \r\n                })\r\n                .catch(erro => {\r\n                    \r\n                    htmlAConcatenar = '<span style=\"color: red;\"> erro ao gerar etiquetas!</span>';\r\n\r\n                    $('#regiao-' + regiao.id).html('');\r\n                    $('#regiao-' + regiao.id).html(htmlAnterior + htmlAConcatenar);\r\n                    console.log(erro);\r\n                });            \r\n        });         \r\n    }\r\n\r\n    /**\r\n     * Método que trata a resposta\r\n     * @param int regiaoId\r\n     * @param JSON resposta\r\n     */\r\n    _trataResposta(regiaoId, resposta) {\r\n        \r\n        if(resposta.excecoes.length) {\r\n\r\n            this._imprimeExcecoes(regiaoId, resposta.excecoes);\r\n\r\n            return false;\r\n        }\r\n        \r\n        this._imprimeResposta(regiaoId, resposta);         \r\n    }\r\n\r\n    /**\r\n     * Método que imprime as exceções\r\n     * @param int regiaoId\r\n     * @param JSON resposta\r\n     */\r\n    _imprimeExcecoes(regiaoId, excecoes) {\r\n\r\n        let htmlAnterior = $('#regiao-' + regiaoId).html();\r\n        let htmlAConcatenar = '';\r\n\r\n        excecoes.forEach(excecao => {\r\n\r\n            htmlAConcatenar += ' <span style=\"color: red;\">' + excecao + '</span>';\r\n        });\r\n\r\n        $('#regiao-' + regiaoId).html(htmlAnterior + htmlAConcatenar); \r\n    }\r\n\r\n    /**\r\n     * Método que imprie a resposta\r\n     * @param int regiaoId\r\n     * @param JSON resposta\r\n     */\r\n    _imprimeResposta(regiaoId, resposta) {\r\n\r\n        let htmlAnterior = $('#regiao-' + regiaoId).html();\r\n        let htmlAConcatenar = '';        \r\n\r\n        htmlAConcatenar = '<span style=\"color: green;\">' + resposta.mensagem + ' ' + \r\n               (resposta.nomeXlsx != '' ? '<a href=\"' + resposta.nomeXlsx + '\" style=\"color: blue;\">Excel PIMACO</a>' : '') +\r\n               (resposta.nomeXlsxOk != '' ? '<a href=\"' + resposta.nomeXlsxOk + '\" style=\"color: green;\">Excel OKs</a>' : '') +\r\n               (resposta.nomeXlsxNaoOk != '' ? '<a href=\"' + resposta.nomeXlsxNaoOk + '\" style=\"color: red\">Excel não OKs</a>' : '') +\r\n              '</span> ';\r\n        \r\n        $('#regiao-' + regiaoId).html(htmlAnterior + htmlAConcatenar);         \r\n    }\r\n\r\n    /**\r\n     * Método que valida a submissao\r\n     * @return boolean\r\n     */\r\n    _validaSubmissao() {\r\n\r\n        let retorno = false;\r\n\r\n        this._tiposSaida.forEach(tipoSaida => {\r\n\r\n            if(tipoSaida.valor > 0)\r\n                retorno = true;\r\n                \r\n        });\r\n\r\n        return retorno;\r\n    }\r\n}"]}